@model BTL_LTWeb.ViewModels.RegisterViewModel

@{
    ViewData["Title"] = "Register";
    Layout = "~/Views/Shared/LoginLayout.cshtml";
}

<form method="post" asp-controller="Account" asp-action="Register">
    <div class="mb-3">
        <label asp-for="Name" class="form-label">Họ tên</label>
        <input asp-for="Name" class="form-control" id="Name" aria-describedby="nameHelp">
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="DateOfBirth" class="form-label">Ngày sinh</label>
        <input asp-for="DateOfBirth" class="form-control" id="DateOfBirth" type="date">
        <span asp-validation-for="DateOfBirth" class="text-danger"></span>
    </div>
    <div class="mb-3 row">
        <div class="col-md-6">
            <label asp-for="Province" class="form-label">Tỉnh/Thành phố<span class="text-danger">*</span></label>
            <select asp-for="Province" id="c_country" class="form-control">
                <option value="">Chọn Tỉnh/Thành phố</option>
            </select>
            <span asp-validation-for="Province" class="text-danger"></span>
        </div>
        <div class="col-md-6">
            <label asp-for="District" class="form-label">Quận/Huyện<span class="text-danger">*</span></label>
            <select asp-for="District" id="c_district" class="form-control">
                <option value="">Chọn Quận/Huyện</option>
            </select>
            <span asp-validation-for="District" class="text-danger"></span>
        </div>
    </div>

    <div class="mb-3">
        <label asp-for="StreetAddress" class="form-label">Số nhà, Ngõ, Xã/Phường</label>
        <input asp-for="StreetAddress" class="form-control" id="Address">
        <span asp-validation-for="StreetAddress" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="PhoneNumber" class="form-label">Số điện thoại</label>
        <input asp-for="PhoneNumber" class="form-control" id="PhoneNumber">
        <span asp-validation-for="PhoneNumber" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Email" class="form-label">Email</label>
        <input asp-for="Email" class="form-control" id="Email" type="email">
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="mb-4">
        <label asp-for="Password" class="form-label">Mật khẩu</label>
        <input asp-for="Password" class="form-control" id="Password" type="password">
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>

    <div class="mb-4">
        <label asp-for="ConfirmPassword" class="form-label">Xác nhận mật khẩu</label>
        <input asp-for="ConfirmPassword" class="form-control" id="ConfirmPassword" type="password">
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>

    <div>
        <span class="text-danger">
            @Html.ValidationSummary(true) <!-- Hiển thị thông báo lỗi chung -->
        </span>
    </div>
    <button type="submit" class="btn btn-primary w-100 py-8 fs-4 mb-4 rounded-2">Đăng ký</button>

    <div class="d-flex align-items-center justify-content-center">
        <p class="fs-4 mb-0 fw-bold">Đã có tài khoản?</p>
        <a class="text-primary fw-bold ms-2" href="@Url.Action("Login", "Account")">Đăng nhập</a>
    </div>
</form>

@section Scripts {
    <script>
        let code = 0;
        function loadProvinces(selectId, districtSelectId) {
            fetch('https://provinces.open-api.vn/api/p/')
                .then(response => response.json())
                .then(data => {
                    let provinceSelect = document.getElementById(selectId);
                    data.forEach(province => {
                        let option = document.createElement('option');
                        option.value = province.name;
                        option.textContent = province.name;
                        provinceSelect.appendChild(option);
                        code = province.code;
                    });

                    provinceSelect.addEventListener('change', function () {
                        loadDistricts(code, districtSelectId);
                    });
                });
        }

        function loadDistricts(provinceName, districtSelectId) {
            fetch(`https://provinces.open-api.vn/api/p/${provinceName}?depth=2`)
                .then(response => response.json())
                .then(data => {
                    let districtSelect = document.getElementById(districtSelectId);
                    districtSelect.innerHTML = '';
                    if (data.districts) {
                        data.districts.forEach(district => {
                            let option = document.createElement('option');
                            option.value = district.name;
                            option.textContent = district.name;
                            districtSelect.appendChild(option);
                        });
                    }
                })
                .catch(error => console.error('Error loading districts:', error));
        }

        document.addEventListener('DOMContentLoaded', function () {
            loadProvinces('c_country', 'c_district');
        });

    </script>
}